#autoload
#  ============================================================================  #
#  [ https://github.com/z-shell ] ❮ ZI ❯         [ (c) 2022 Z-SHELL COMMUNITY ] #
#  ============================================================================  #
#
# -*- mode: zsh; sh-indentation: 2; indent-tabs-mode: nil; sh-basic-offset: 2; -*-
# vim: ft=zsh sw=2 ts=2 et

→za-patch-dl-handler() {
  # According to the Zsh Plugin Standard
  # https://z.digitalclouds.dev/community/zsh_plugin_standard#standard-recommended-options
  builtin emulate -L zsh ${=${options[xtrace]:#off}:+-o xtrace}
  builtin setopt extended_glob warn_create_global typeset_silent no_short_loops rc_quotes no_auto_pushd

  [[ "$1" = plugin ]] && \
  local type="$1" user="$2" plugin="$3" id_as="$4" dir="$5" || \
  local type="$1" url="$2" id_as="$3" dir="$4"

  if [[ -n ${ICE[dl]} && ${ICE[dl]} != ink=[-/[:alnum:]]* ]] {
    local -a dls srcdst
    dls=( "${(s.;.)ICE[dl]}" )
    local dl hd tl
    for dl ( $dls ) {
      srcdst=( ${(@s.->.)dl} )
      srcdst=( "${srcdst[@]//((#s)[[:space:]]##|[[:space:]]##(#e))/}" )
      hd="" tl=""
      [[ -n ${srcdst[2]} ]] && {
        @zi-substitute 'srcdst[2]'
        hd="${srcdst[2]:h}"
        tl="${srcdst[2]:t}"
      } || {
        @zi-substitute 'srcdst[1]'
        hd="."
        tl="${${srcdst[1]%%\?*}:t}"
      }
      local tdir="${${(M)hd:#/*}:-$dir/$hd}"
      # Create the destination directory
      command mkdir -p "$tdir"
      local ret=0
      .z-a-patch-dl-download-file-stdout "${srcdst[1]}" >! "$tdir/$tl" || {
        .z-a-patch-dl-download-file-stdout "${srcdst[1]}" 1 >! "$tdir/$tl" || {
          +zi-message "{annex}patch-dl annex{ehi}:{rst} {error}Couldn't download the URL {info2}${srcdst[1]}{rst}"
          ret=1
        }
      }
      (( !ret && !OPTS[opt_-q,--quiet] && ZI[annex-multi-flag:pull-active] == 2 )) && \
      +zi-message "{annex}patch-dl annex{ehi}:{rst} File {info2}$tl{rst} downloaded correctly{rst}"
      }
  }

  if [[ -n "${ICE[patch]}" ]] {
    local -a patches
    patches=( "${(s.;.)ICE[patch]}" )
    patches=( "${patches[@]//((#s)[[:space:]]##|[[:space:]]##(#e))/}" )
    local pch
    for pch ( $patches ) {
      @zi-substitute pch
      (( !OPTS[opt_-q,--quiet] && ZI[annex-multi-flag:pull-active] == 2 )) && \
      +zi-message "{annex}patch-dl annex{ehi}:{rst} Applying patch {info2}$pch{rst}…"
      (   cd -q "$dir"
        print -nP "%F{220}"
        command patch -s -N -p1 -i "$pch"
        print -nP "%f"
      )
    }
  }
}
